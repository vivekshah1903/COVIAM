(function() {
    'use strict';

    angular.module('app.events').controller('EventEditCtrl', eventeditCtrl);

    eventeditCtrl.$inject = ['eventService', '$scope', 'dataManagerService', 'APIS','sessionService', 'utils', 'CONFIG', 'ModalService', '$state', '$stateParams'];

    //Controller implementation
    function eventeditCtrl(eventService, $scope, dataManagerService, APIS, sessionService, utils, CONFIG, ModalService, $state, $stateParams) {
        var vm = this;
        console.log("setting", $stateParams);
        vm.edit = $stateParams.obj;
       // console.log(vm.edit);
        vm.dashDatePicker = dashDatePicker;
        vm.validFromCheck = validFromCheck;
        //vm.getEventDetails = getEventDetails;
        vm.openDatePicker = openDatePicker;
        //vm.publishDateValidate = publishDateValidate;
        //vm.modalOk = modalOk;
        vm.editEvent = editEvent;



        /*if (vm.edit && vm.edit.eventLocationInd == false) {
            vm.edit.venue =  'External';
        } else if(vm.edit && vm.edit.eventLocationInd == true) {
            vm.edit.venue =  'Internal';
        }*/
        onloadData();
         function onloadData(){
            //var c="2010-10-29 09:10:23 +0530";
        
        var a = utils.getinDateFormat(vm.edit.eventEndDate, CONFIG.SYSTEM_DATE_FORMAT.PAGE_DATE);
        var b = utils.getinDateFormat(vm.edit.eventStartDate, CONFIG.SYSTEM_DATE_FORMAT.PAGE_DATE);
        var c = utils.getinDateFormat(vm.edit.publishDate, CONFIG.SYSTEM_DATE_FORMAT.PAGE_DATE);
        vm.edit.eventStartTime = new Date("09:10:23");
        vm.edit.eventEndTime = new Date("09:10:23");
        //var t2 = new Date(eventStartTime);
        vm.edit.eventEndDate = new Date(a); 
        vm.edit.eventStartDate = new Date(b);
        vm.edit.publishDate = new Date(c);
     }
        var d = new Date(); // today!

        vm.options = {
            minDate: d
        }
       

        function publishDateValidate() {
            vm.publishoptions = {
                maxDate: vm.edit.eventEndDate
            }
        }

        function dashDatePicker(opened, value) {
            var am = this;
            if (value == 'to') {
                am.to = !(am.opened);
            }
            if (value == 'from') {
                am.from = !(am.opened);
            }
        }

        function openDatePicker(opened, value) {
            var am = this;
            if (value == 'to') {
                am.to = !(am.opened);
            }
            if (value == 'from1') {
                am.from1 = !(am.opened);
            }
        }



        function validFromCheck(valueA, valueB) {
            vm.dateError = false;
            if (!valueA || !valueB) {
                vm.dateError = false;
                return;
            }
            (valueA > valueB) ? vm.dateError = true: vm.dateError = false;


        }
       function preloadComboValues(){ 
            var token ="";
            dataManagerService.sendRequest(null, APIS.GET_EVENT_TYPE,token).then(function(data){
                vm.eventDrp = data.eventTypeList;
                //console.log("EVENT TYPE:", vm.eventDrp);
            });
            dataManagerService.sendRequest(null, APIS.GET_ORGANIZED_BY,token).then(function(data){
                vm.organizedDrp = data.groupList;
                //console.log("ORGANIZED TYPE:", vm.organizedDrp);
            });

         }
         preloadComboValues();
        function editEvent(edit) {
            console.log(edit);
            /*var eventEndDate = data.endDate;
            var eventStartDate = data.startDate;*/

            //var eventStartTime =  utils.getinDateFormat(data.startTime, CONFIG.SYSTEM_DATE_FORMAT.TIME_FORMAT);
            //var eventEndTime = utils.getinDateFormat(data.endTime, CONFIG.SYSTEM_DATE_FORMAT.TIME_FORMAT);
           // var publishDate = utils.getinDateFormat(data.publishDate, CONFIG.SYSTEM_DATE_FORMAT.DATE_YEAR_FORMAT);
            //var eventEndDate = utils.getinDateFormat(data.endDate, CONFIG.SYSTEM_DATE_FORMAT.DATE_YEAR_FORMAT);
           // var eventStartDate = utils.getinDateFormat(data.startDate, CONFIG.SYSTEM_DATE_FORMAT.DATE_YEAR_FORMAT);
            var obj = {
                audience: vm.data.event_audience,
                businessLocation: [
                    "ASC, India"
                ],
                eventId: vm.edit.eventId,
                eventDesc: edit.eventDesc,
                eventEndDate: eventEndDate,
                eventEndTime: edit.eventEndTime,
                eventExternalLocation: edit.venue_name,
                eventName: edit.eventName,
                eventStartDate: eventStartDate,
                eventStartTime: edit.eventStartTime,
                organizedBy: edit.organizedBy,
                publishDate: publishDate,
                venue: edit.venue
            }
            var message = "The Event is created and will become active on the published date"
            console.log("Request", obj);
            ModalService.openAlert('confirm', 'Create Event', message, $scope, 'reset');
            $scope.$on('resetOk', function() {
                return eventService.createEventData(obj).then(function(eventData) {
                    if (eventData.message == "No Record Found") {
                        return;
                    } else {
                        // vm.eventSummary.options.data = eventData.events;
                    }

                });

            });
            $scope.$on('resetCancel', function() {
                console.log("No");
            });
            
        }

        



        $scope.categories = [{ "name": "All" }, { "name": "ASCI" }, { "name": "ASCP" }, { "name": "Indore" }];
       

    } //EOF CategoryCtrl
})();
