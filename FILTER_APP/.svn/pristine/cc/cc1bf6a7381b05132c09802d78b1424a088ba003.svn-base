(function() {
    'use strict';

    angular.module('app.album').controller('AlbumCtrl', albumCtrl);

    albumCtrl.$inject = ['$scope', 'AlbumService', 'utils', 'CONFIG', 'ModalService', '$location'];

    //Controller implementation
    function albumCtrl($scope, AlbumService, utils, CONFIG, ModalService, $location) {
        var vm = this;
        vm.dashDatePicker = dashDatePicker;
        vm.validFromCheckGrid = validFromCheckGrid;
        vm.validFromCheck = validFromCheck;
        //vm.changeImg = changeImg;
        vm.createAlbum = createAlbum;

        vm.cancelCreate = cancelCreate;
        vm.deleteImage = deleteImage;




        vm.getAlbumDetails = getAlbumDetails;



        function deleteImage() {

            /*angular.forEach(selectedImage.sort().reverse(), function(value, key) {
                
                vm.data.filename.splice(value,1);
            });*/

            vm.data.filename = vm.data.filename.filter(function(obj) {
                return obj.isChecked !== true;
            });
        }

        getAlbumDetails();





        function createAlbum(data) {
            var validDate = utils.getinDateFormat(data.startDate, CONFIG.SYSTEM_DATE_FORMAT.DATE_YEAR_FORMAT);
            var obj = {
                albumName: data.album_name,
                albumDesc: data.album_description,
                publishDate: validDate,
                locationId: Number(data.location),
                eventId: Number(data.event)
            }
            var fileObj = {
                file: data.filename
            }
            var message = "The album is created and will become active on the published date"
            ModalService.openAlert('confirm', 'Create Album', message, $scope, 'reset');
            $scope.$on('resetOk', function() {
                return AlbumService.createAlbum(obj, fileObj).then(function(albumData) {
                    if (albumData.result == "SUCCESS") {
                        vm.apisAlert = {
                            toggle: true,
                            message: albumData.message || 'Internal Server Error',
                            type: "SUCCESS"
                        };
                        $timeout(function() {
                            vm.apisAlert.toggle = false;
                        }, 5000);
                        return;
                    } else {


                    }
                });
                $scope.$on('resetCancel', function() {

                });
            });







        }

        function getAlbumDetails() {


            return AlbumService.getAlbumSummaryData().then(function(albumData) {
                if (albumData.message == "No Record Found") {
                    return;
                } else {
                    vm.albumSummary.options.data = albumData.dataBean;
                }

            });
        }





        function changeImg() {

            vm.imgTbn = vm.filename[vm.filename.length - 1];
        }
        // vm.albumSummary = albumSummary;


        function dashDatePicker(opened, value) {
            var am = this;
            if (value == 'to') {
                am.to = !(am.opened);
            }
            if (value == 'from') {
                am.from = !(am.opened);
            }
        }

        function validFromCheckGrid(valueA, valueB) {
            var days = (valueB - valueA) / (1000 * 60 * 60 * 24);
            vm.dateError = false;
            vm.dateErrorDays = false;
            if (!valueA || !valueB) {
                vm.dateError = false;
                return;
            }
            if (valueA > valueB) { vm.dateError = true; } else if (days > 30) {
                vm.dateErrorDays = true;
            } else {
                vm.dateError = false;
                vm.dateErrorDays = false;
            }
        }

        function validFromCheck(valueA, valueB) {
            vm.dateError = false;
            if (!valueA || !valueB) {
                vm.dateError = false;
                return;
            }
            (valueA >= valueB) ? vm.dateError = true: vm.dateError = false;


        }

        vm.albumSummary = {
            options: {
                cache: false,
                //height: 600,
                striped: true,
                pagination: true,
                pageSize: 10,
                pageList: [5, 10, 25, 50, 100, 200],
                search: true,
                showColumns: false,
                showRefresh: false,
                showExport: false,
                filterControl: true,
                minimumCountColumns: 2,
                clickToSelect: false,
                showToggle: false,
                toolbar: "#toolbar",
                maintainSelected: true,
                columns: [{
                        field: 'state',
                        checkbox: true,
                        align: 'center',
                        valign: 'middle'
                    }, {
                        title: 'Thumbnail',
                        field: 'thumbnailUrl',

                        align: 'center',
                        valign: 'middle',
                        sortable: true,
                        "formatter": thumbnailFormatter



                    }, {
                        title: 'Album Details',
                        field: 'albumDetails',
                        // filterControl: 'select',
                        align: 'center',
                        valign: 'middle',
                        sortable: true,
                        "formatter": albumDetailsFormatter

                    }, {
                        title: 'Published Date',
                        field: 'publishedDTl',

                        align: 'center',
                        valign: 'middle',
                        sortable: true


                    }, {
                        title: 'Location',
                        field: 'location',

                        align: 'center',
                        valign: 'middle',
                        sortable: true


                    }, {
                        title: 'Associated Event',
                        field: 'associatedEvent',
                        align: 'center',
                        valign: 'middle',
                        sortable: true,
                        events: window.operateEvents = {
                            'click .goToEvent': function(e, value, row, index) {}
                        },
                        "formatter": eventNameFormatter


                    }, {
                        title: 'Status',
                        field: 'status',

                        align: 'center',
                        valign: 'middle',
                        "formatter": statusFormatter


                    }


                ]

            }
        };

        window.operateEvents['click .goToEvent'] = (function(e, value, row, index) {
            
        });

        function eventNameFormatter(value, row, index) {
            if(row.event){
             return '<a class=" fileUpload pst-rel">' + row.event.eventName + '</a>';
            }else{
                return;
            }
        }

        function thumbnailFormatter(value, row, index) {
            return '<img class="" src=" ' + value.thumbnailUrl + ' ">';
        }
        //albumDetailsFormatter
        function albumDetailsFormatter(value, row, index) {
            return '<div>' + row.albumName + '</div><div>Created By:</div>' + row.createdBy + '<div>Created Date:</div>' + row.createdDT + '</div>';
        }

        function statusFormatter(value, row, index) {

            if (row.status == "FAIL") {
                return [
                    '<a class="like pst-rel" href="javascript:void(0)">',
                    '<i   class="glyphicon glyphicon-remove"></i>',
                    '<span class="tooltiptext">Failed</span>',
                    '</a> '

                ].join('');
            } else if (row.status == "ACTIVE") {
                return [
                    '<a class="like pst-rel" href="javascript:void(0)" >',
                    '<i   class="glyphicon glyphicon-ok"></i>',
                    '<span class="tooltiptext">Succes</span>',
                    '</a> '

                ].join('');
            } else if (row.status == "IN_PROGRESS") {
                return [
                    '<a class="like pst-rel" href="javascript:void(0)">',
                    '<i   class="glyphicon glyphicon-hourglass"></i>',
                    '<span class="tooltiptext">In progress</span>',
                    '</a> '

                ].join('');
            }
        }

        function cancelCreate() {
            var message = "Do you want to cancel creating this album ?"

            ModalService.openAlert('confirm', 'Cancel Album', message, $scope, 'reset');
            $scope.$on('resetOk', function() {
                $location.path("/album");

            });


            $scope.$on('resetCancel', function() {

            });
        }
        vm.deleteAlbumRow = function() {

            var $tableAlbum = $('#table1');

            if ($tableAlbum.bootstrapTable('getSelections').length > 0) {
                var ids = $tableAlbum.bootstrapTable('getAllSelections')
                var albumIdValue = [];
                angular.forEach(ids, function(value, key) {
                    var obj = {
                        "eventId": value.id
                    }
                    albumIdValue.push(obj);


                });


                var message = "Are you sure you want to delete the selected album ?"

                ModalService.openAlert('confirm', 'Cancel Event', message, $scope, 'reset');
                $scope.$on('resetOk', function() {
                    var albumObj = {
                        "listId": albumIdValue
                    }
                    return AlbumService.deleteAlbums(albumObj).then(function(albumData) {
                        getAlbumDetails();

                    });

                });


                $scope.$on('resetCancel', function() {

                });
            }




        }
    }

})();
